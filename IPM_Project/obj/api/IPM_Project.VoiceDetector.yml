### YamlMime:ManagedReference
items:
- uid: IPM_Project.VoiceDetector
  commentId: T:IPM_Project.VoiceDetector
  id: VoiceDetector
  parent: IPM_Project
  children:
  - IPM_Project.VoiceDetector.#ctor(DeepSpeechClient.Interfaces.IDeepSpeech)
  - IPM_Project.VoiceDetector.AudioFilePath
  - IPM_Project.VoiceDetector.AvailableRecordDevices
  - IPM_Project.VoiceDetector.EnableLanguageModelAsync(System.String,System.String)
  - IPM_Project.VoiceDetector.EnableStartRecord
  - IPM_Project.VoiceDetector.EnableStopRecord
  - IPM_Project.VoiceDetector.ExecuteInferenceFromFileAsync
  - IPM_Project.VoiceDetector.InferenceFromFileCommand
  - IPM_Project.VoiceDetector.SelectedDevice
  - IPM_Project.VoiceDetector.StartRecordingCommand
  - IPM_Project.VoiceDetector.StatusMessage
  - IPM_Project.VoiceDetector.StopRecordingCommand
  - IPM_Project.VoiceDetector.StreamingIsBusy
  - IPM_Project.VoiceDetector.Transcription
  langs:
  - csharp
  - vb
  name: VoiceDetector
  nameWithType: VoiceDetector
  fullName: IPM_Project.VoiceDetector
  type: Class
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: VoiceDetector
    path: VoiceDetector.cs
    startLine: 23
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  summary: "\nTODO: Doc.\n"
  example: []
  syntax:
    content: 'public class VoiceDetector : BindableBase, INotifyPropertyChanged'
    content.vb: >-
      Public Class VoiceDetector
          Inherits BindableBase
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  - IPM_Project.BindableBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - IPM_Project.BindableBase.SetProperty``1({T}@,{T},System.String,System.Action)
  - IPM_Project.BindableBase.PropertyChanged
  - IPM_Project.BindableBase.OnPropertyChanged(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: IPM_Project.VoiceDetector.InferenceFromFileCommand
  commentId: P:IPM_Project.VoiceDetector.InferenceFromFileCommand
  id: InferenceFromFileCommand
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: InferenceFromFileCommand
  nameWithType: VoiceDetector.InferenceFromFileCommand
  fullName: IPM_Project.VoiceDetector.InferenceFromFileCommand
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: InferenceFromFileCommand
    path: VoiceDetector.cs
    startLine: 33
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public IAsyncCommand InferenceFromFileCommand { get; }
    parameters: []
    return:
      type: AsyncAwaitBestPractices.MVVM.IAsyncCommand
    content.vb: Public ReadOnly Property InferenceFromFileCommand As IAsyncCommand
  overload: IPM_Project.VoiceDetector.InferenceFromFileCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: IPM_Project.VoiceDetector.StartRecordingCommand
  commentId: P:IPM_Project.VoiceDetector.StartRecordingCommand
  id: StartRecordingCommand
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: StartRecordingCommand
  nameWithType: VoiceDetector.StartRecordingCommand
  fullName: IPM_Project.VoiceDetector.StartRecordingCommand
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: StartRecordingCommand
    path: VoiceDetector.cs
    startLine: 34
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public RelayCommand StartRecordingCommand { get; }
    parameters: []
    return:
      type: GalaSoft.MvvmLight.Command.RelayCommand
    content.vb: Public ReadOnly Property StartRecordingCommand As RelayCommand
  overload: IPM_Project.VoiceDetector.StartRecordingCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: IPM_Project.VoiceDetector.StopRecordingCommand
  commentId: P:IPM_Project.VoiceDetector.StopRecordingCommand
  id: StopRecordingCommand
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: StopRecordingCommand
  nameWithType: VoiceDetector.StopRecordingCommand
  fullName: IPM_Project.VoiceDetector.StopRecordingCommand
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: StopRecordingCommand
    path: VoiceDetector.cs
    startLine: 35
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public IAsyncCommand StopRecordingCommand { get; }
    parameters: []
    return:
      type: AsyncAwaitBestPractices.MVVM.IAsyncCommand
    content.vb: Public ReadOnly Property StopRecordingCommand As IAsyncCommand
  overload: IPM_Project.VoiceDetector.StopRecordingCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: IPM_Project.VoiceDetector.StreamingIsBusy
  commentId: P:IPM_Project.VoiceDetector.StreamingIsBusy
  id: StreamingIsBusy
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: StreamingIsBusy
  nameWithType: VoiceDetector.StreamingIsBusy
  fullName: IPM_Project.VoiceDetector.StreamingIsBusy
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: StreamingIsBusy
    path: VoiceDetector.cs
    startLine: 42
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public bool StreamingIsBusy { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StreamingIsBusy As Boolean
  overload: IPM_Project.VoiceDetector.StreamingIsBusy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.EnableStartRecord
  commentId: P:IPM_Project.VoiceDetector.EnableStartRecord
  id: EnableStartRecord
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: EnableStartRecord
  nameWithType: VoiceDetector.EnableStartRecord
  fullName: IPM_Project.VoiceDetector.EnableStartRecord
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: EnableStartRecord
    path: VoiceDetector.cs
    startLine: 54
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public bool EnableStartRecord { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableStartRecord As Boolean
  overload: IPM_Project.VoiceDetector.EnableStartRecord*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.EnableStopRecord
  commentId: P:IPM_Project.VoiceDetector.EnableStopRecord
  id: EnableStopRecord
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: EnableStopRecord
  nameWithType: VoiceDetector.EnableStopRecord
  fullName: IPM_Project.VoiceDetector.EnableStopRecord
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: EnableStopRecord
    path: VoiceDetector.cs
    startLine: 62
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public bool EnableStopRecord { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableStopRecord As Boolean
  overload: IPM_Project.VoiceDetector.EnableStopRecord*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.SelectedDevice
  commentId: P:IPM_Project.VoiceDetector.SelectedDevice
  id: SelectedDevice
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: SelectedDevice
  nameWithType: VoiceDetector.SelectedDevice
  fullName: IPM_Project.VoiceDetector.SelectedDevice
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: SelectedDevice
    path: VoiceDetector.cs
    startLine: 70
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public MMDevice SelectedDevice { get; set; }
    parameters: []
    return:
      type: CSCore.CoreAudioAPI.MMDevice
    content.vb: Public Property SelectedDevice As MMDevice
  overload: IPM_Project.VoiceDetector.SelectedDevice*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.StatusMessage
  commentId: P:IPM_Project.VoiceDetector.StatusMessage
  id: StatusMessage
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: StatusMessage
  nameWithType: VoiceDetector.StatusMessage
  fullName: IPM_Project.VoiceDetector.StatusMessage
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: StatusMessage
    path: VoiceDetector.cs
    startLine: 78
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public string StatusMessage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StatusMessage As String
  overload: IPM_Project.VoiceDetector.StatusMessage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.Transcription
  commentId: P:IPM_Project.VoiceDetector.Transcription
  id: Transcription
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: Transcription
  nameWithType: VoiceDetector.Transcription
  fullName: IPM_Project.VoiceDetector.Transcription
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: Transcription
    path: VoiceDetector.cs
    startLine: 93
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public string Transcription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Transcription As String
  overload: IPM_Project.VoiceDetector.Transcription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.AudioFilePath
  commentId: P:IPM_Project.VoiceDetector.AudioFilePath
  id: AudioFilePath
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: AudioFilePath
  nameWithType: VoiceDetector.AudioFilePath
  fullName: IPM_Project.VoiceDetector.AudioFilePath
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: AudioFilePath
    path: VoiceDetector.cs
    startLine: 100
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public string AudioFilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AudioFilePath As String
  overload: IPM_Project.VoiceDetector.AudioFilePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.AvailableRecordDevices
  commentId: P:IPM_Project.VoiceDetector.AvailableRecordDevices
  id: AvailableRecordDevices
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: AvailableRecordDevices
  nameWithType: VoiceDetector.AvailableRecordDevices
  fullName: IPM_Project.VoiceDetector.AvailableRecordDevices
  type: Property
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: AvailableRecordDevices
    path: VoiceDetector.cs
    startLine: 107
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public ObservableCollection<MMDevice> AvailableRecordDevices { get; set; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{CSCore.CoreAudioAPI.MMDevice}
    content.vb: Public Property AvailableRecordDevices As ObservableCollection(Of MMDevice)
  overload: IPM_Project.VoiceDetector.AvailableRecordDevices*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.#ctor(DeepSpeechClient.Interfaces.IDeepSpeech)
  commentId: M:IPM_Project.VoiceDetector.#ctor(DeepSpeechClient.Interfaces.IDeepSpeech)
  id: '#ctor(DeepSpeechClient.Interfaces.IDeepSpeech)'
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: VoiceDetector(IDeepSpeech)
  nameWithType: VoiceDetector.VoiceDetector(IDeepSpeech)
  fullName: IPM_Project.VoiceDetector.VoiceDetector(DeepSpeechClient.Interfaces.IDeepSpeech)
  type: Constructor
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: .ctor
    path: VoiceDetector.cs
    startLine: 114
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public VoiceDetector(IDeepSpeech sttClient)
    parameters:
    - id: sttClient
      type: DeepSpeechClient.Interfaces.IDeepSpeech
    content.vb: Public Sub New(sttClient As IDeepSpeech)
  overload: IPM_Project.VoiceDetector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.EnableLanguageModelAsync(System.String,System.String)
  commentId: M:IPM_Project.VoiceDetector.EnableLanguageModelAsync(System.String,System.String)
  id: EnableLanguageModelAsync(System.String,System.String)
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: EnableLanguageModelAsync(String, String)
  nameWithType: VoiceDetector.EnableLanguageModelAsync(String, String)
  fullName: IPM_Project.VoiceDetector.EnableLanguageModelAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: EnableLanguageModelAsync
    path: VoiceDetector.cs
    startLine: 208
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public Task EnableLanguageModelAsync(string lmPath, string triePath)
    parameters:
    - id: lmPath
      type: System.String
    - id: triePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EnableLanguageModelAsync(lmPath As String, triePath As String) As Task
  overload: IPM_Project.VoiceDetector.EnableLanguageModelAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: IPM_Project.VoiceDetector.ExecuteInferenceFromFileAsync
  commentId: M:IPM_Project.VoiceDetector.ExecuteInferenceFromFileAsync
  id: ExecuteInferenceFromFileAsync
  parent: IPM_Project.VoiceDetector
  langs:
  - csharp
  - vb
  name: ExecuteInferenceFromFileAsync()
  nameWithType: VoiceDetector.ExecuteInferenceFromFileAsync()
  fullName: IPM_Project.VoiceDetector.ExecuteInferenceFromFileAsync()
  type: Method
  source:
    remote:
      path: IPM_Project/VoiceDetector.cs
      branch: master
      repo: https://github.com/DaKeoZ/DeepSpeech-IPM.git
    id: ExecuteInferenceFromFileAsync
    path: VoiceDetector.cs
    startLine: 224
  assemblies:
  - IPM_Project
  namespace: IPM_Project
  syntax:
    content: public Task ExecuteInferenceFromFileAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ExecuteInferenceFromFileAsync As Task
  overload: IPM_Project.VoiceDetector.ExecuteInferenceFromFileAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: IPM_Project
  commentId: N:IPM_Project
  name: IPM_Project
  nameWithType: IPM_Project
  fullName: IPM_Project
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IPM_Project.BindableBase
  commentId: T:IPM_Project.BindableBase
  parent: IPM_Project
  name: BindableBase
  nameWithType: BindableBase
  fullName: IPM_Project.BindableBase
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: IPM_Project.BindableBase.SetProperty``1({T}@,{T},System.String,System.Action)
  commentId: M:IPM_Project.BindableBase.SetProperty``1(``0@,``0,System.String,System.Action)
  parent: IPM_Project.BindableBase
  definition: IPM_Project.BindableBase.SetProperty``1(``0@,``0,System.String,System.Action)
  name: SetProperty<T>(T, T, String, Action)
  nameWithType: BindableBase.SetProperty<T>(T, T, String, Action)
  fullName: IPM_Project.BindableBase.SetProperty<T>(T, T, System.String, System.Action)
  nameWithType.vb: BindableBase.SetProperty(Of T)(T, T, String, Action)
  fullName.vb: IPM_Project.BindableBase.SetProperty(Of T)(T, T, System.String, System.Action)
  name.vb: SetProperty(Of T)(T, T, String, Action)
  spec.csharp:
  - uid: IPM_Project.BindableBase.SetProperty``1(``0@,``0,System.String,System.Action)
    name: SetProperty<T>
    nameWithType: BindableBase.SetProperty<T>
    fullName: IPM_Project.BindableBase.SetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IPM_Project.BindableBase.SetProperty``1(``0@,``0,System.String,System.Action)
    name: SetProperty(Of T)
    nameWithType: BindableBase.SetProperty(Of T)
    fullName: IPM_Project.BindableBase.SetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IPM_Project.BindableBase.PropertyChanged
  commentId: E:IPM_Project.BindableBase.PropertyChanged
  parent: IPM_Project.BindableBase
  name: PropertyChanged
  nameWithType: BindableBase.PropertyChanged
  fullName: IPM_Project.BindableBase.PropertyChanged
- uid: IPM_Project.BindableBase.OnPropertyChanged(System.String)
  commentId: M:IPM_Project.BindableBase.OnPropertyChanged(System.String)
  parent: IPM_Project.BindableBase
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: BindableBase.OnPropertyChanged(String)
  fullName: IPM_Project.BindableBase.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: IPM_Project.BindableBase.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: BindableBase.OnPropertyChanged
    fullName: IPM_Project.BindableBase.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IPM_Project.BindableBase.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: BindableBase.OnPropertyChanged
    fullName: IPM_Project.BindableBase.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: IPM_Project.BindableBase.SetProperty``1(``0@,``0,System.String,System.Action)
  commentId: M:IPM_Project.BindableBase.SetProperty``1(``0@,``0,System.String,System.Action)
  isExternal: true
  name: SetProperty<T>(T, T, String, Action)
  nameWithType: BindableBase.SetProperty<T>(T, T, String, Action)
  fullName: IPM_Project.BindableBase.SetProperty<T>(T, T, System.String, System.Action)
  nameWithType.vb: BindableBase.SetProperty(Of T)(T, T, String, Action)
  fullName.vb: IPM_Project.BindableBase.SetProperty(Of T)(T, T, System.String, System.Action)
  name.vb: SetProperty(Of T)(T, T, String, Action)
  spec.csharp:
  - uid: IPM_Project.BindableBase.SetProperty``1(``0@,``0,System.String,System.Action)
    name: SetProperty<T>
    nameWithType: BindableBase.SetProperty<T>
    fullName: IPM_Project.BindableBase.SetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IPM_Project.BindableBase.SetProperty``1(``0@,``0,System.String,System.Action)
    name: SetProperty(Of T)
    nameWithType: BindableBase.SetProperty(Of T)
    fullName: IPM_Project.BindableBase.SetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IPM_Project.VoiceDetector.InferenceFromFileCommand*
  commentId: Overload:IPM_Project.VoiceDetector.InferenceFromFileCommand
  name: InferenceFromFileCommand
  nameWithType: VoiceDetector.InferenceFromFileCommand
  fullName: IPM_Project.VoiceDetector.InferenceFromFileCommand
- uid: AsyncAwaitBestPractices.MVVM.IAsyncCommand
  commentId: T:AsyncAwaitBestPractices.MVVM.IAsyncCommand
  parent: AsyncAwaitBestPractices.MVVM
  isExternal: true
  name: IAsyncCommand
  nameWithType: IAsyncCommand
  fullName: AsyncAwaitBestPractices.MVVM.IAsyncCommand
- uid: AsyncAwaitBestPractices.MVVM
  commentId: N:AsyncAwaitBestPractices.MVVM
  isExternal: true
  name: AsyncAwaitBestPractices.MVVM
  nameWithType: AsyncAwaitBestPractices.MVVM
  fullName: AsyncAwaitBestPractices.MVVM
- uid: IPM_Project.VoiceDetector.StartRecordingCommand*
  commentId: Overload:IPM_Project.VoiceDetector.StartRecordingCommand
  name: StartRecordingCommand
  nameWithType: VoiceDetector.StartRecordingCommand
  fullName: IPM_Project.VoiceDetector.StartRecordingCommand
- uid: GalaSoft.MvvmLight.Command.RelayCommand
  commentId: T:GalaSoft.MvvmLight.Command.RelayCommand
  parent: GalaSoft.MvvmLight.Command
  isExternal: true
  name: RelayCommand
  nameWithType: RelayCommand
  fullName: GalaSoft.MvvmLight.Command.RelayCommand
- uid: GalaSoft.MvvmLight.Command
  commentId: N:GalaSoft.MvvmLight.Command
  isExternal: true
  name: GalaSoft.MvvmLight.Command
  nameWithType: GalaSoft.MvvmLight.Command
  fullName: GalaSoft.MvvmLight.Command
- uid: IPM_Project.VoiceDetector.StopRecordingCommand*
  commentId: Overload:IPM_Project.VoiceDetector.StopRecordingCommand
  name: StopRecordingCommand
  nameWithType: VoiceDetector.StopRecordingCommand
  fullName: IPM_Project.VoiceDetector.StopRecordingCommand
- uid: IPM_Project.VoiceDetector.StreamingIsBusy*
  commentId: Overload:IPM_Project.VoiceDetector.StreamingIsBusy
  name: StreamingIsBusy
  nameWithType: VoiceDetector.StreamingIsBusy
  fullName: IPM_Project.VoiceDetector.StreamingIsBusy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IPM_Project.VoiceDetector.EnableStartRecord*
  commentId: Overload:IPM_Project.VoiceDetector.EnableStartRecord
  name: EnableStartRecord
  nameWithType: VoiceDetector.EnableStartRecord
  fullName: IPM_Project.VoiceDetector.EnableStartRecord
- uid: IPM_Project.VoiceDetector.EnableStopRecord*
  commentId: Overload:IPM_Project.VoiceDetector.EnableStopRecord
  name: EnableStopRecord
  nameWithType: VoiceDetector.EnableStopRecord
  fullName: IPM_Project.VoiceDetector.EnableStopRecord
- uid: IPM_Project.VoiceDetector.SelectedDevice*
  commentId: Overload:IPM_Project.VoiceDetector.SelectedDevice
  name: SelectedDevice
  nameWithType: VoiceDetector.SelectedDevice
  fullName: IPM_Project.VoiceDetector.SelectedDevice
- uid: CSCore.CoreAudioAPI.MMDevice
  commentId: T:CSCore.CoreAudioAPI.MMDevice
  parent: CSCore.CoreAudioAPI
  isExternal: true
  name: MMDevice
  nameWithType: MMDevice
  fullName: CSCore.CoreAudioAPI.MMDevice
- uid: CSCore.CoreAudioAPI
  commentId: N:CSCore.CoreAudioAPI
  isExternal: true
  name: CSCore.CoreAudioAPI
  nameWithType: CSCore.CoreAudioAPI
  fullName: CSCore.CoreAudioAPI
- uid: IPM_Project.VoiceDetector.StatusMessage*
  commentId: Overload:IPM_Project.VoiceDetector.StatusMessage
  name: StatusMessage
  nameWithType: VoiceDetector.StatusMessage
  fullName: IPM_Project.VoiceDetector.StatusMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IPM_Project.VoiceDetector.Transcription*
  commentId: Overload:IPM_Project.VoiceDetector.Transcription
  name: Transcription
  nameWithType: VoiceDetector.Transcription
  fullName: IPM_Project.VoiceDetector.Transcription
- uid: IPM_Project.VoiceDetector.AudioFilePath*
  commentId: Overload:IPM_Project.VoiceDetector.AudioFilePath
  name: AudioFilePath
  nameWithType: VoiceDetector.AudioFilePath
  fullName: IPM_Project.VoiceDetector.AudioFilePath
- uid: IPM_Project.VoiceDetector.AvailableRecordDevices*
  commentId: Overload:IPM_Project.VoiceDetector.AvailableRecordDevices
  name: AvailableRecordDevices
  nameWithType: VoiceDetector.AvailableRecordDevices
  fullName: IPM_Project.VoiceDetector.AvailableRecordDevices
- uid: System.Collections.ObjectModel.ObservableCollection{CSCore.CoreAudioAPI.MMDevice}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{CSCore.CoreAudioAPI.MMDevice}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<MMDevice>
  nameWithType: ObservableCollection<MMDevice>
  fullName: System.Collections.ObjectModel.ObservableCollection<CSCore.CoreAudioAPI.MMDevice>
  nameWithType.vb: ObservableCollection(Of MMDevice)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of CSCore.CoreAudioAPI.MMDevice)
  name.vb: ObservableCollection(Of MMDevice)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CSCore.CoreAudioAPI.MMDevice
    name: MMDevice
    nameWithType: MMDevice
    fullName: CSCore.CoreAudioAPI.MMDevice
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CSCore.CoreAudioAPI.MMDevice
    name: MMDevice
    nameWithType: MMDevice
    fullName: CSCore.CoreAudioAPI.MMDevice
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: IPM_Project.VoiceDetector.#ctor*
  commentId: Overload:IPM_Project.VoiceDetector.#ctor
  name: VoiceDetector
  nameWithType: VoiceDetector.VoiceDetector
  fullName: IPM_Project.VoiceDetector.VoiceDetector
- uid: DeepSpeechClient.Interfaces.IDeepSpeech
  commentId: T:DeepSpeechClient.Interfaces.IDeepSpeech
  parent: DeepSpeechClient.Interfaces
  isExternal: true
  name: IDeepSpeech
  nameWithType: IDeepSpeech
  fullName: DeepSpeechClient.Interfaces.IDeepSpeech
- uid: DeepSpeechClient.Interfaces
  commentId: N:DeepSpeechClient.Interfaces
  isExternal: true
  name: DeepSpeechClient.Interfaces
  nameWithType: DeepSpeechClient.Interfaces
  fullName: DeepSpeechClient.Interfaces
- uid: IPM_Project.VoiceDetector.EnableLanguageModelAsync*
  commentId: Overload:IPM_Project.VoiceDetector.EnableLanguageModelAsync
  name: EnableLanguageModelAsync
  nameWithType: VoiceDetector.EnableLanguageModelAsync
  fullName: IPM_Project.VoiceDetector.EnableLanguageModelAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: IPM_Project.VoiceDetector.ExecuteInferenceFromFileAsync*
  commentId: Overload:IPM_Project.VoiceDetector.ExecuteInferenceFromFileAsync
  name: ExecuteInferenceFromFileAsync
  nameWithType: VoiceDetector.ExecuteInferenceFromFileAsync
  fullName: IPM_Project.VoiceDetector.ExecuteInferenceFromFileAsync
